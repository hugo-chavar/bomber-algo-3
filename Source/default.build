<?xml version="1.0"?>
<project name="Bomberman" default="run-test">
  <description>El mejor juego del mundo.</description>
  <property name="debug" value="false" />
  <property name="model-base-dir" value="${project::get-name()}Model" />
  <property name="test-base-dir" value="Test${project::get-name()}" />
  <property name="aplication-base-dir" value="WindowsGame1/WindowsGame1" />
  <property name="build-dir" value="Build" />
  <property name="resources-dir" value="Resources" />
  <property name="nant.settings.currentframework" value="net-4.0" />
  <target name="initialize">
    <mkdir dir="${build-dir}"/>
    <copy file="${resources-dir}/mapaActualizado.xml" 
          tofile="${build-dir}/mapaActualizado.xml"/>
  </target>
  <target name="clean">
    <delete dir="${build-dir}" if="${directory::exists('${build-dir}')}" />
    <delete failonerror="false">
       <fileset>
	     <include name="${project::get-name()}/bin/**"/>
	     <include name="${project::get-name()}/obj/**"/>
	     <include name="${test-base-dir}/bin/**"/>
	     <include name="${test-base-dir}/obj/**"/>
	     <include name="${test-base-dir}/test-results/**"/>
	     <include name="test-results/**"/>
	  </fileset>
	</delete>
  </target>
  <target name="bomberman" depends="initialize">
    <csc target="library" output="${build-dir}/${model-base-dir}.dll" debug="${debug}">
      <sources>
        <include name="${project::get-name()}/*.cs"/>
        <include name="${project::get-name()}/**/*.cs"/>
      </sources>
    </csc>
  </target>
  <target name="compile-test" depends="bomberman">
    <csc target="library" output="${build-dir}/${test-base-dir}.dll">
      <sources>
        <include name="${test-base-dir}/*.cs"/>
        <include name="${test-base-dir}/**/*.cs"/>
      </sources>
      <references>
        <include name="${build-dir}/${model-base-dir}.dll"/>
        <include name="${nant::scan-probing-paths('nunit.framework.dll')}" />
      </references>
    </csc>
  </target>
 	<target name="run-test-to-file" depends="compile-test">
		<nunit2 verbose="true">
			<formatter type="Xml" usefile="true" extension=".xml" outputdir="${build-dir}/results" />
			<test>
				<assemblies basedir="${build-dir}">
					<include name="${test-base-dir}.dll" />
				</assemblies>
				<references basedir="${build-dir}">
					<include name="${model-base-dir}.dll" />
				</references>
			</test>
		</nunit2>
	</target>
	<target name="run-test" depends="compile-test">
		<nunit2>
			<formatter type="Plain" usefile="false" />
			<test>
				<assemblies basedir="${build-dir}">
					<include name="${test-base-dir}.dll" />
				</assemblies>
				<references basedir="${build-dir}">
					<include name="${model-base-dir}.dll" />
				</references>
			</test>
		</nunit2>
	</target>
</project>
